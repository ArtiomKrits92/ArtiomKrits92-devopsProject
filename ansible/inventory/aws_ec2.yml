# ansible inventory for aws ec2 instances
# defines which hosts ansible should manage

all:
  children:
    web_servers:
      hosts:
        # web server instances will be added here dynamically
      vars:
        ansible_user: ec2-user
        ansible_ssh_private_key_file: ~/.ssh/devops-learning-key.pem
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        ansible_python_interpreter: /usr/bin/python3
        
        # app variables
        app_port: "5000"
        project_name: "terraform-ansible-webapp"
        app_directory: "/opt/webapp"
        service_name: "webapp"
        log_directory: "/var/log/webapp"
        python_version: "3"
        
    bastion:
      hosts:
        # bastion host will be added here dynamically
      vars:
        ansible_user: ec2-user
        ansible_ssh_private_key_file: ~/.ssh/devops-learning-key.pem
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        ansible_python_interpreter: /usr/bin/python3

# group variables
web_servers:
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    ansible_connection: ssh
    ansible_timeout: 30
    ansible_python_interpreter: /usr/bin/python3
    
    app_port: "5000"
    project_name: "terraform-ansible-webapp"
    app_directory: "/opt/webapp"
    service_name: "webapp"
    log_directory: "/var/log/webapp"
    python_version: "3"
    
    timezone: "UTC"
    ntp_servers:
      - "0.pool.ntp.org"
      - "1.pool.ntp.org"
      - "2.pool.ntp.org"

bastion:
  vars:
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null'
    ansible_connection: ssh
    ansible_timeout: 30
    ansible_python_interpreter: /usr/bin/python3
    
    timezone: "UTC"
    ntp_servers:
      - "0.pool.ntp.org"
      - "1.pool.ntp.org"
      - "2.pool.ntp.org"