# deploy app playbook
# deploys the web application

---
- name: "Deploy Web Application"
  hosts: web_servers
  become: yes
  gather_facts: yes
  
  vars:
    app_port: "{{ app_port | default('5000') }}"
    project_name: "{{ project_name | default('terraform-ansible-webapp') }}"
    app_directory: "/opt/webapp"
    service_name: "webapp"
    log_directory: "/var/log/webapp"
    python_version: "3"
    
  pre_tasks:
    - name: "Display deployment information"
      debug:
        msg: "Deploying application to {{ inventory_hostname }}"
        
    - name: "Check if the service is already running"
      systemd:
        name: "{{ service_name }}"
      register: service_status
      become: yes
      
    - name: "Display current service status"
      debug:
        msg: "Service is {{ 'running' if service_status.status.ActiveState == 'active' else 'not running' }}"

  tasks:
    # application update
    - name: "Stop the webapp service"
      systemd:
        name: "{{ service_name }}"
        state: stopped
      become: yes
      when: service_status.status.ActiveState == 'active'
      
    - name: "Backup current application"
      archive:
        path: "{{ app_directory }}"
        dest: "/tmp/webapp-backup-{{ ansible_date_time.epoch }}.tar.gz"
        format: gz
      become: yes
      when: service_status.status.ActiveState == 'active'
      
    - name: "Update Flask application file"
      template:
        src: "app.py.j2"
        dest: "{{ app_directory }}/app.py"
        owner: ec2-user
        group: ec2-user
        mode: '0755'
        backup: yes
      become: yes
      notify: "restart webapp service"
      
    - name: "Update application configuration"
      template:
        src: "app_config.py.j2"
        dest: "{{ app_directory }}/config.py"
        owner: ec2-user
        group: ec2-user
        mode: '0644'
        backup: yes
      become: yes
      notify: "restart webapp service"

    # service management
    - name: "Reload systemd daemon"
      systemd:
        daemon_reload: yes
      become: yes
      
    - name: "Start webapp service"
      systemd:
        name: "{{ service_name }}"
        state: started
        enabled: yes
      become: yes

    # health check
    - name: "Wait for service to start"
      wait_for:
        port: "{{ app_port }}"
        host: "{{ ansible_default_ipv4.address }}"
        delay: 5
        timeout: 30
      become: yes
      
    - name: "Test application health endpoint"
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ app_port }}/health"
        method: GET
        status_code: 200
      register: health_check
      
    - name: "Test application main endpoint"
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ app_port }}/"
        method: GET
        status_code: 200
      register: main_check
      
    - name: "Display deployment results"
      debug:
        msg: 
          - "Health check: {{ 'PASSED' if health_check.status == 200 else 'FAILED' }}"
          - "Main page: {{ 'PASSED' if main_check.status == 200 else 'FAILED' }}"
          - "Application URL: http://{{ ansible_default_ipv4.address }}:{{ app_port }}"

  handlers:
    - name: "restart webapp service"
      systemd:
        name: "{{ service_name }}"
        state: restarted
      become: yes
      
    - name: "reload systemd daemon"
      systemd:
        daemon_reload: yes
      become: yes